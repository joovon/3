package cuda

/*
 THIS FILE IS AUTO-GENERATED BY CUDA2GO.
 EDITING IS FUTILE.
*/

import (
	"github.com/mumax/3/cuda/cu"
	"github.com/mumax/3/timer"
	"sync"
	"unsafe"
)

// CUDA handle for settopologicalchargelattice kernel
var settopologicalchargelattice_code cu.Function

// Stores the arguments for settopologicalchargelattice kernel invocation
type settopologicalchargelattice_args_t struct {
	arg_s   unsafe.Pointer
	arg_mx  unsafe.Pointer
	arg_my  unsafe.Pointer
	arg_mz  unsafe.Pointer
	arg_Nx  int
	arg_Ny  int
	arg_Nz  int
	arg_PBC byte
	argptr  [8]unsafe.Pointer
	sync.Mutex
}

// Stores the arguments for settopologicalchargelattice kernel invocation
var settopologicalchargelattice_args settopologicalchargelattice_args_t

func init() {
	// CUDA driver kernel call wants pointers to arguments, set them up once.
	settopologicalchargelattice_args.argptr[0] = unsafe.Pointer(&settopologicalchargelattice_args.arg_s)
	settopologicalchargelattice_args.argptr[1] = unsafe.Pointer(&settopologicalchargelattice_args.arg_mx)
	settopologicalchargelattice_args.argptr[2] = unsafe.Pointer(&settopologicalchargelattice_args.arg_my)
	settopologicalchargelattice_args.argptr[3] = unsafe.Pointer(&settopologicalchargelattice_args.arg_mz)
	settopologicalchargelattice_args.argptr[4] = unsafe.Pointer(&settopologicalchargelattice_args.arg_Nx)
	settopologicalchargelattice_args.argptr[5] = unsafe.Pointer(&settopologicalchargelattice_args.arg_Ny)
	settopologicalchargelattice_args.argptr[6] = unsafe.Pointer(&settopologicalchargelattice_args.arg_Nz)
	settopologicalchargelattice_args.argptr[7] = unsafe.Pointer(&settopologicalchargelattice_args.arg_PBC)
}

// Wrapper for settopologicalchargelattice CUDA kernel, asynchronous.
func k_settopologicalchargelattice_async(s unsafe.Pointer, mx unsafe.Pointer, my unsafe.Pointer, mz unsafe.Pointer, Nx int, Ny int, Nz int, PBC byte, cfg *config) {
	if Synchronous { // debug
		Sync()
		timer.Start("settopologicalchargelattice")
	}

	settopologicalchargelattice_args.Lock()
	defer settopologicalchargelattice_args.Unlock()

	if settopologicalchargelattice_code == 0 {
		settopologicalchargelattice_code = fatbinLoad(settopologicalchargelattice_map, "settopologicalchargelattice")
	}

	settopologicalchargelattice_args.arg_s = s
	settopologicalchargelattice_args.arg_mx = mx
	settopologicalchargelattice_args.arg_my = my
	settopologicalchargelattice_args.arg_mz = mz
	settopologicalchargelattice_args.arg_Nx = Nx
	settopologicalchargelattice_args.arg_Ny = Ny
	settopologicalchargelattice_args.arg_Nz = Nz
	settopologicalchargelattice_args.arg_PBC = PBC

	args := settopologicalchargelattice_args.argptr[:]
	cu.LaunchKernel(settopologicalchargelattice_code, cfg.Grid.X, cfg.Grid.Y, cfg.Grid.Z, cfg.Block.X, cfg.Block.Y, cfg.Block.Z, 0, stream0, args)

	if Synchronous { // debug
		Sync()
		timer.Stop("settopologicalchargelattice")
	}
}

// maps compute capability on PTX code for settopologicalchargelattice kernel.
var settopologicalchargelattice_map = map[int]string{0: "",
	30: settopologicalchargelattice_ptx_30}

// settopologicalchargelattice PTX code for various compute capabilities.
const (
	settopologicalchargelattice_ptx_30 = `
.version 6.4
.target sm_30
.address_size 64

	// .globl	settopologicalchargelattice

.visible .entry settopologicalchargelattice(
	.param .u64 settopologicalchargelattice_param_0,
	.param .u64 settopologicalchargelattice_param_1,
	.param .u64 settopologicalchargelattice_param_2,
	.param .u64 settopologicalchargelattice_param_3,
	.param .u32 settopologicalchargelattice_param_4,
	.param .u32 settopologicalchargelattice_param_5,
	.param .u32 settopologicalchargelattice_param_6,
	.param .u8 settopologicalchargelattice_param_7
)
{
	.reg .pred 	%p<59>;
	.reg .b16 	%rs<7>;
	.reg .f32 	%f<276>;
	.reg .b32 	%r<121>;
	.reg .b64 	%rd<33>;


	ld.param.u64 	%rd5, [settopologicalchargelattice_param_0];
	ld.param.u64 	%rd6, [settopologicalchargelattice_param_1];
	ld.param.u64 	%rd7, [settopologicalchargelattice_param_2];
	ld.param.u64 	%rd8, [settopologicalchargelattice_param_3];
	ld.param.u32 	%r32, [settopologicalchargelattice_param_4];
	ld.param.u32 	%r33, [settopologicalchargelattice_param_5];
	ld.param.u32 	%r34, [settopologicalchargelattice_param_6];
	ld.param.u8 	%rs3, [settopologicalchargelattice_param_7];
	cvta.to.global.u64 	%rd1, %rd8;
	cvta.to.global.u64 	%rd2, %rd7;
	cvta.to.global.u64 	%rd3, %rd6;
	mov.u32 	%r35, %ntid.x;
	mov.u32 	%r36, %ctaid.x;
	mov.u32 	%r37, %tid.x;
	mad.lo.s32 	%r1, %r35, %r36, %r37;
	mov.u32 	%r38, %ntid.y;
	mov.u32 	%r39, %ctaid.y;
	mov.u32 	%r40, %tid.y;
	mad.lo.s32 	%r2, %r38, %r39, %r40;
	mov.u32 	%r41, %ntid.z;
	mov.u32 	%r42, %ctaid.z;
	mov.u32 	%r43, %tid.z;
	mad.lo.s32 	%r3, %r41, %r42, %r43;
	setp.ge.s32	%p1, %r2, %r33;
	setp.ge.s32	%p2, %r1, %r32;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32	%p4, %r3, %r34;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	BB0_44;

	cvta.to.global.u64 	%rd9, %rd5;
	mul.lo.s32 	%r4, %r3, %r33;
	add.s32 	%r44, %r4, %r2;
	mul.lo.s32 	%r5, %r44, %r32;
	add.s32 	%r45, %r5, %r1;
	mul.wide.s32 	%rd10, %r45, 4;
	add.s64 	%rd11, %rd3, %rd10;
	add.s64 	%rd12, %rd2, %rd10;
	add.s64 	%rd13, %rd1, %rd10;
	ld.global.f32 	%f1, [%rd11];
	ld.global.f32 	%f2, [%rd12];
	mul.f32 	%f56, %f2, %f2;
	fma.rn.f32 	%f57, %f1, %f1, %f56;
	ld.global.f32 	%f3, [%rd13];
	fma.rn.f32 	%f58, %f3, %f3, %f57;
	setp.eq.f32	%p6, %f58, 0f00000000;
	add.s64 	%rd4, %rd9, %rd10;
	@%p6 bra 	BB0_43;
	bra.uni 	BB0_2;

BB0_43:
	mov.u32 	%r116, 0;
	st.global.u32 	[%rd4], %r116;
	bra.uni 	BB0_44;

BB0_2:
	and.b16  	%rs1, %rs3, 1;
	setp.eq.s16	%p7, %rs1, 0;
	add.s32 	%r6, %r1, 1;
	@%p7 bra 	BB0_4;

	rem.s32 	%r46, %r6, %r32;
	add.s32 	%r47, %r46, %r32;
	rem.s32 	%r117, %r47, %r32;
	bra.uni 	BB0_5;

BB0_4:
	add.s32 	%r48, %r32, -1;
	min.s32 	%r117, %r6, %r48;

BB0_5:
	setp.ge.s32	%p9, %r6, %r32;
	mov.f32 	%f260, 0f00000000;
	and.pred  	%p10, %p9, %p7;
	mov.f32 	%f261, %f260;
	mov.f32 	%f262, %f260;
	@%p10 bra 	BB0_7;

	add.s32 	%r49, %r117, %r5;
	mul.wide.s32 	%rd14, %r49, 4;
	add.s64 	%rd15, %rd3, %rd14;
	ld.global.f32 	%f260, [%rd15];
	add.s64 	%rd16, %rd2, %rd14;
	ld.global.f32 	%f261, [%rd16];
	add.s64 	%rd17, %rd1, %rd14;
	ld.global.f32 	%f262, [%rd17];

BB0_7:
	and.b16  	%rs2, %rs3, 2;
	setp.eq.s16	%p11, %rs2, 0;
	add.s32 	%r10, %r2, 1;
	@%p11 bra 	BB0_9;

	rem.s32 	%r50, %r10, %r33;
	add.s32 	%r51, %r50, %r33;
	rem.s32 	%r118, %r51, %r33;
	bra.uni 	BB0_10;

BB0_9:
	add.s32 	%r52, %r33, -1;
	min.s32 	%r118, %r10, %r52;

BB0_10:
	setp.ge.s32	%p13, %r10, %r33;
	mov.f32 	%f263, 0f00000000;
	and.pred  	%p14, %p13, %p11;
	mov.f32 	%f264, %f263;
	mov.f32 	%f265, %f263;
	@%p14 bra 	BB0_12;

	add.s32 	%r53, %r118, %r4;
	mad.lo.s32 	%r54, %r53, %r32, %r1;
	mul.wide.s32 	%rd18, %r54, 4;
	add.s64 	%rd19, %rd3, %rd18;
	ld.global.f32 	%f265, [%rd19];
	add.s64 	%rd20, %rd2, %rd18;
	ld.global.f32 	%f264, [%rd20];
	add.s64 	%rd21, %rd1, %rd18;
	ld.global.f32 	%f263, [%rd21];

BB0_12:
	add.s32 	%r14, %r1, -1;
	@%p7 bra 	BB0_14;

	rem.s32 	%r55, %r14, %r32;
	add.s32 	%r56, %r55, %r32;
	rem.s32 	%r119, %r56, %r32;
	bra.uni 	BB0_15;

BB0_14:
	mov.u32 	%r57, 0;
	max.s32 	%r119, %r14, %r57;

BB0_15:
	add.s32 	%r18, %r119, %r5;
	setp.lt.s32	%p16, %r14, 0;
	mov.f32 	%f266, 0f00000000;
	and.pred  	%p18, %p16, %p7;
	mov.f32 	%f267, %f266;
	mov.f32 	%f268, %f266;
	@%p18 bra 	BB0_17;

	mul.wide.s32 	%rd22, %r18, 4;
	add.s64 	%rd23, %rd3, %rd22;
	ld.global.f32 	%f268, [%rd23];
	add.s64 	%rd24, %rd2, %rd22;
	ld.global.f32 	%f267, [%rd24];
	add.s64 	%rd25, %rd1, %rd22;
	ld.global.f32 	%f266, [%rd25];

BB0_17:
	add.s32 	%r19, %r2, -1;
	@%p11 bra 	BB0_19;

	rem.s32 	%r58, %r19, %r33;
	add.s32 	%r59, %r58, %r33;
	rem.s32 	%r120, %r59, %r33;
	bra.uni 	BB0_20;

BB0_19:
	mov.u32 	%r60, 0;
	max.s32 	%r120, %r19, %r60;

BB0_20:
	add.s32 	%r61, %r120, %r4;
	mad.lo.s32 	%r23, %r61, %r32, %r1;
	setp.lt.s32	%p20, %r19, 0;
	mov.f32 	%f269, 0f00000000;
	and.pred  	%p22, %p20, %p11;
	mov.f32 	%f270, %f269;
	mov.f32 	%f271, %f269;
	@%p22 bra 	BB0_22;

	mul.wide.s32 	%rd26, %r23, 4;
	add.s64 	%rd27, %rd3, %rd26;
	ld.global.f32 	%f271, [%rd27];
	add.s64 	%rd28, %rd2, %rd26;
	ld.global.f32 	%f270, [%rd28];
	add.s64 	%rd29, %rd1, %rd26;
	ld.global.f32 	%f269, [%rd29];

BB0_22:
	mul.f32 	%f71, %f262, %f264;
	mul.f32 	%f72, %f261, %f263;
	sub.f32 	%f73, %f72, %f71;
	mul.f32 	%f74, %f260, %f263;
	mul.f32 	%f75, %f262, %f265;
	sub.f32 	%f76, %f75, %f74;
	mul.f32 	%f77, %f261, %f265;
	mul.f32 	%f78, %f260, %f264;
	sub.f32 	%f79, %f78, %f77;
	mul.f32 	%f80, %f2, %f76;
	fma.rn.f32 	%f81, %f1, %f73, %f80;
	fma.rn.f32 	%f82, %f3, %f79, %f81;
	mul.f32 	%f83, %f2, %f261;
	fma.rn.f32 	%f84, %f1, %f260, %f83;
	fma.rn.f32 	%f28, %f3, %f262, %f84;
	add.f32 	%f85, %f28, 0f3F800000;
	mul.f32 	%f86, %f1, %f265;
	fma.rn.f32 	%f87, %f2, %f264, %f86;
	fma.rn.f32 	%f29, %f3, %f263, %f87;
	add.f32 	%f88, %f85, %f29;
	mul.f32 	%f89, %f260, %f265;
	fma.rn.f32 	%f90, %f261, %f264, %f89;
	fma.rn.f32 	%f91, %f262, %f263, %f90;
	add.f32 	%f92, %f91, %f88;
	abs.f32 	%f30, %f92;
	abs.f32 	%f31, %f82;
	setp.eq.f32	%p23, %f30, 0f00000000;
	setp.eq.f32	%p24, %f31, 0f00000000;
	and.pred  	%p25, %p23, %p24;
	mov.b32 	 %r24, %f92;
	mov.b32 	 %r62, %f82;
	and.b32  	%r25, %r62, -2147483648;
	@%p25 bra 	BB0_26;
	bra.uni 	BB0_23;

BB0_26:
	shr.s32 	%r69, %r24, 31;
	and.b32  	%r70, %r69, 1078530011;
	or.b32  	%r71, %r70, %r25;
	mov.b32 	 %f272, %r71;
	bra.uni 	BB0_27;

BB0_23:
	setp.eq.f32	%p26, %f30, 0f7F800000;
	setp.eq.f32	%p27, %f31, 0f7F800000;
	and.pred  	%p28, %p26, %p27;
	@%p28 bra 	BB0_25;
	bra.uni 	BB0_24;

BB0_25:
	shr.s32 	%r65, %r24, 31;
	and.b32  	%r66, %r65, 13483017;
	add.s32 	%r67, %r66, 1061752795;
	or.b32  	%r68, %r67, %r25;
	mov.b32 	 %f272, %r68;
	bra.uni 	BB0_27;

BB0_24:
	max.f32 	%f93, %f31, %f30;
	min.f32 	%f94, %f31, %f30;
	div.rn.f32 	%f95, %f94, %f93;
	mul.rn.f32 	%f96, %f95, %f95;
	mov.f32 	%f97, 0fC0B59883;
	mov.f32 	%f98, 0fBF52C7EA;
	fma.rn.f32 	%f99, %f96, %f98, %f97;
	mov.f32 	%f100, 0fC0D21907;
	fma.rn.f32 	%f101, %f99, %f96, %f100;
	mul.f32 	%f102, %f96, %f101;
	mul.f32 	%f103, %f95, %f102;
	add.f32 	%f104, %f96, 0f41355DC0;
	mov.f32 	%f105, 0f41E6BD60;
	fma.rn.f32 	%f106, %f104, %f96, %f105;
	mov.f32 	%f107, 0f419D92C8;
	fma.rn.f32 	%f108, %f106, %f96, %f107;
	rcp.rn.f32 	%f109, %f108;
	fma.rn.f32 	%f110, %f103, %f109, %f95;
	mov.f32 	%f111, 0f3FC90FDB;
	sub.f32 	%f112, %f111, %f110;
	setp.gt.f32	%p29, %f31, %f30;
	selp.f32	%f113, %f112, %f110, %p29;
	mov.f32 	%f114, 0f40490FDB;
	sub.f32 	%f115, %f114, %f113;
	setp.lt.s32	%p30, %r24, 0;
	selp.f32	%f116, %f115, %f113, %p30;
	mov.b32 	 %r63, %f116;
	or.b32  	%r64, %r63, %r25;
	mov.b32 	 %f117, %r64;
	add.f32 	%f118, %f30, %f31;
	setp.gtu.f32	%p31, %f118, 0f7F800000;
	selp.f32	%f272, %f118, %f117, %p31;

BB0_27:
	mul.f32 	%f119, %f263, %f267;
	mul.f32 	%f120, %f264, %f266;
	sub.f32 	%f121, %f120, %f119;
	mul.f32 	%f122, %f265, %f266;
	mul.f32 	%f123, %f263, %f268;
	sub.f32 	%f124, %f123, %f122;
	mul.f32 	%f125, %f264, %f268;
	mul.f32 	%f126, %f265, %f267;
	sub.f32 	%f127, %f126, %f125;
	mul.f32 	%f128, %f2, %f124;
	fma.rn.f32 	%f129, %f1, %f121, %f128;
	fma.rn.f32 	%f130, %f3, %f127, %f129;
	mul.f32 	%f131, %f1, %f268;
	fma.rn.f32 	%f132, %f2, %f267, %f131;
	fma.rn.f32 	%f36, %f3, %f266, %f132;
	add.f32 	%f133, %f29, 0f3F800000;
	add.f32 	%f134, %f133, %f36;
	mul.f32 	%f135, %f265, %f268;
	fma.rn.f32 	%f136, %f264, %f267, %f135;
	fma.rn.f32 	%f137, %f263, %f266, %f136;
	add.f32 	%f138, %f137, %f134;
	abs.f32 	%f37, %f138;
	abs.f32 	%f38, %f130;
	setp.eq.f32	%p32, %f37, 0f00000000;
	setp.eq.f32	%p33, %f38, 0f00000000;
	and.pred  	%p34, %p32, %p33;
	mov.b32 	 %r26, %f138;
	mov.b32 	 %r72, %f130;
	and.b32  	%r27, %r72, -2147483648;
	@%p34 bra 	BB0_31;
	bra.uni 	BB0_28;

BB0_31:
	shr.s32 	%r79, %r26, 31;
	and.b32  	%r80, %r79, 1078530011;
	or.b32  	%r81, %r80, %r27;
	mov.b32 	 %f273, %r81;
	bra.uni 	BB0_32;

BB0_28:
	setp.eq.f32	%p35, %f37, 0f7F800000;
	setp.eq.f32	%p36, %f38, 0f7F800000;
	and.pred  	%p37, %p35, %p36;
	@%p37 bra 	BB0_30;
	bra.uni 	BB0_29;

BB0_30:
	shr.s32 	%r75, %r26, 31;
	and.b32  	%r76, %r75, 13483017;
	add.s32 	%r77, %r76, 1061752795;
	or.b32  	%r78, %r77, %r27;
	mov.b32 	 %f273, %r78;
	bra.uni 	BB0_32;

BB0_29:
	max.f32 	%f139, %f38, %f37;
	min.f32 	%f140, %f38, %f37;
	div.rn.f32 	%f141, %f140, %f139;
	mul.rn.f32 	%f142, %f141, %f141;
	mov.f32 	%f143, 0fC0B59883;
	mov.f32 	%f144, 0fBF52C7EA;
	fma.rn.f32 	%f145, %f142, %f144, %f143;
	mov.f32 	%f146, 0fC0D21907;
	fma.rn.f32 	%f147, %f145, %f142, %f146;
	mul.f32 	%f148, %f142, %f147;
	mul.f32 	%f149, %f141, %f148;
	add.f32 	%f150, %f142, 0f41355DC0;
	mov.f32 	%f151, 0f41E6BD60;
	fma.rn.f32 	%f152, %f150, %f142, %f151;
	mov.f32 	%f153, 0f419D92C8;
	fma.rn.f32 	%f154, %f152, %f142, %f153;
	rcp.rn.f32 	%f155, %f154;
	fma.rn.f32 	%f156, %f149, %f155, %f141;
	mov.f32 	%f157, 0f3FC90FDB;
	sub.f32 	%f158, %f157, %f156;
	setp.gt.f32	%p38, %f38, %f37;
	selp.f32	%f159, %f158, %f156, %p38;
	mov.f32 	%f160, 0f40490FDB;
	sub.f32 	%f161, %f160, %f159;
	setp.lt.s32	%p39, %r26, 0;
	selp.f32	%f162, %f161, %f159, %p39;
	mov.b32 	 %r73, %f162;
	or.b32  	%r74, %r73, %r27;
	mov.b32 	 %f163, %r74;
	add.f32 	%f164, %f37, %f38;
	setp.gtu.f32	%p40, %f164, 0f7F800000;
	selp.f32	%f273, %f164, %f163, %p40;

BB0_32:
	mul.f32 	%f165, %f266, %f270;
	mul.f32 	%f166, %f267, %f269;
	sub.f32 	%f167, %f166, %f165;
	mul.f32 	%f168, %f268, %f269;
	mul.f32 	%f169, %f266, %f271;
	sub.f32 	%f170, %f169, %f168;
	mul.f32 	%f171, %f267, %f271;
	mul.f32 	%f172, %f268, %f270;
	sub.f32 	%f173, %f172, %f171;
	mul.f32 	%f174, %f2, %f170;
	fma.rn.f32 	%f175, %f1, %f167, %f174;
	fma.rn.f32 	%f176, %f3, %f173, %f175;
	mul.f32 	%f177, %f1, %f271;
	fma.rn.f32 	%f178, %f2, %f270, %f177;
	fma.rn.f32 	%f43, %f3, %f269, %f178;
	add.f32 	%f179, %f36, 0f3F800000;
	add.f32 	%f180, %f179, %f43;
	mul.f32 	%f181, %f268, %f271;
	fma.rn.f32 	%f182, %f267, %f270, %f181;
	fma.rn.f32 	%f183, %f266, %f269, %f182;
	add.f32 	%f184, %f183, %f180;
	abs.f32 	%f44, %f184;
	abs.f32 	%f45, %f176;
	setp.eq.f32	%p41, %f44, 0f00000000;
	setp.eq.f32	%p42, %f45, 0f00000000;
	and.pred  	%p43, %p41, %p42;
	mov.b32 	 %r28, %f184;
	mov.b32 	 %r82, %f176;
	and.b32  	%r29, %r82, -2147483648;
	@%p43 bra 	BB0_36;
	bra.uni 	BB0_33;

BB0_36:
	shr.s32 	%r89, %r28, 31;
	and.b32  	%r90, %r89, 1078530011;
	or.b32  	%r91, %r90, %r29;
	mov.b32 	 %f274, %r91;
	bra.uni 	BB0_37;

BB0_33:
	setp.eq.f32	%p44, %f44, 0f7F800000;
	setp.eq.f32	%p45, %f45, 0f7F800000;
	and.pred  	%p46, %p44, %p45;
	@%p46 bra 	BB0_35;
	bra.uni 	BB0_34;

BB0_35:
	shr.s32 	%r85, %r28, 31;
	and.b32  	%r86, %r85, 13483017;
	add.s32 	%r87, %r86, 1061752795;
	or.b32  	%r88, %r87, %r29;
	mov.b32 	 %f274, %r88;
	bra.uni 	BB0_37;

BB0_34:
	max.f32 	%f185, %f45, %f44;
	min.f32 	%f186, %f45, %f44;
	div.rn.f32 	%f187, %f186, %f185;
	mul.rn.f32 	%f188, %f187, %f187;
	mov.f32 	%f189, 0fC0B59883;
	mov.f32 	%f190, 0fBF52C7EA;
	fma.rn.f32 	%f191, %f188, %f190, %f189;
	mov.f32 	%f192, 0fC0D21907;
	fma.rn.f32 	%f193, %f191, %f188, %f192;
	mul.f32 	%f194, %f188, %f193;
	mul.f32 	%f195, %f187, %f194;
	add.f32 	%f196, %f188, 0f41355DC0;
	mov.f32 	%f197, 0f41E6BD60;
	fma.rn.f32 	%f198, %f196, %f188, %f197;
	mov.f32 	%f199, 0f419D92C8;
	fma.rn.f32 	%f200, %f198, %f188, %f199;
	rcp.rn.f32 	%f201, %f200;
	fma.rn.f32 	%f202, %f195, %f201, %f187;
	mov.f32 	%f203, 0f3FC90FDB;
	sub.f32 	%f204, %f203, %f202;
	setp.gt.f32	%p47, %f45, %f44;
	selp.f32	%f205, %f204, %f202, %p47;
	mov.f32 	%f206, 0f40490FDB;
	sub.f32 	%f207, %f206, %f205;
	setp.lt.s32	%p48, %r28, 0;
	selp.f32	%f208, %f207, %f205, %p48;
	mov.b32 	 %r83, %f208;
	or.b32  	%r84, %r83, %r29;
	mov.b32 	 %f209, %r84;
	add.f32 	%f210, %f44, %f45;
	setp.gtu.f32	%p49, %f210, 0f7F800000;
	selp.f32	%f274, %f210, %f209, %p49;

BB0_37:
	mul.f32 	%f211, %f261, %f269;
	mul.f32 	%f212, %f262, %f270;
	sub.f32 	%f213, %f212, %f211;
	mul.f32 	%f214, %f262, %f271;
	mul.f32 	%f215, %f260, %f269;
	sub.f32 	%f216, %f215, %f214;
	mul.f32 	%f217, %f260, %f270;
	mul.f32 	%f218, %f261, %f271;
	sub.f32 	%f219, %f218, %f217;
	mul.f32 	%f220, %f2, %f216;
	fma.rn.f32 	%f221, %f1, %f213, %f220;
	fma.rn.f32 	%f222, %f3, %f219, %f221;
	add.f32 	%f223, %f43, 0f3F800000;
	add.f32 	%f224, %f28, %f223;
	mul.f32 	%f225, %f260, %f271;
	fma.rn.f32 	%f226, %f261, %f270, %f225;
	fma.rn.f32 	%f227, %f262, %f269, %f226;
	add.f32 	%f228, %f227, %f224;
	abs.f32 	%f50, %f228;
	abs.f32 	%f51, %f222;
	setp.eq.f32	%p50, %f50, 0f00000000;
	setp.eq.f32	%p51, %f51, 0f00000000;
	and.pred  	%p52, %p50, %p51;
	mov.b32 	 %r30, %f228;
	mov.b32 	 %r92, %f222;
	and.b32  	%r31, %r92, -2147483648;
	@%p52 bra 	BB0_41;
	bra.uni 	BB0_38;

BB0_41:
	shr.s32 	%r99, %r30, 31;
	and.b32  	%r100, %r99, 1078530011;
	or.b32  	%r101, %r100, %r31;
	mov.b32 	 %f275, %r101;
	bra.uni 	BB0_42;

BB0_38:
	setp.eq.f32	%p53, %f50, 0f7F800000;
	setp.eq.f32	%p54, %f51, 0f7F800000;
	and.pred  	%p55, %p53, %p54;
	@%p55 bra 	BB0_40;
	bra.uni 	BB0_39;

BB0_40:
	shr.s32 	%r95, %r30, 31;
	and.b32  	%r96, %r95, 13483017;
	add.s32 	%r97, %r96, 1061752795;
	or.b32  	%r98, %r97, %r31;
	mov.b32 	 %f275, %r98;
	bra.uni 	BB0_42;

BB0_39:
	max.f32 	%f229, %f51, %f50;
	min.f32 	%f230, %f51, %f50;
	div.rn.f32 	%f231, %f230, %f229;
	mul.rn.f32 	%f232, %f231, %f231;
	mov.f32 	%f233, 0fC0B59883;
	mov.f32 	%f234, 0fBF52C7EA;
	fma.rn.f32 	%f235, %f232, %f234, %f233;
	mov.f32 	%f236, 0fC0D21907;
	fma.rn.f32 	%f237, %f235, %f232, %f236;
	mul.f32 	%f238, %f232, %f237;
	mul.f32 	%f239, %f231, %f238;
	add.f32 	%f240, %f232, 0f41355DC0;
	mov.f32 	%f241, 0f41E6BD60;
	fma.rn.f32 	%f242, %f240, %f232, %f241;
	mov.f32 	%f243, 0f419D92C8;
	fma.rn.f32 	%f244, %f242, %f232, %f243;
	rcp.rn.f32 	%f245, %f244;
	fma.rn.f32 	%f246, %f239, %f245, %f231;
	mov.f32 	%f247, 0f3FC90FDB;
	sub.f32 	%f248, %f247, %f246;
	setp.gt.f32	%p56, %f51, %f50;
	selp.f32	%f249, %f248, %f246, %p56;
	mov.f32 	%f250, 0f40490FDB;
	sub.f32 	%f251, %f250, %f249;
	setp.lt.s32	%p57, %r30, 0;
	selp.f32	%f252, %f251, %f249, %p57;
	mov.b32 	 %r93, %f252;
	or.b32  	%r94, %r93, %r31;
	mov.b32 	 %f253, %r94;
	add.f32 	%f254, %f50, %f51;
	setp.gtu.f32	%p58, %f254, 0f7F800000;
	selp.f32	%f275, %f254, %f253, %p58;

BB0_42:
	add.f32 	%f255, %f273, %f273;
	fma.rn.f32 	%f256, %f272, 0f40000000, %f255;
	fma.rn.f32 	%f257, %f274, 0f40000000, %f256;
	fma.rn.f32 	%f258, %f275, 0f40000000, %f257;
	mul.f32 	%f259, %f258, 0f3F000000;
	mad.lo.s32 	%r110, %r3, %r33, %r2;
	mad.lo.s32 	%r115, %r110, %r32, %r1;
	mul.wide.s32 	%rd31, %r115, 4;
	add.s64 	%rd32, %rd9, %rd31;
	st.global.f32 	[%rd32], %f259;

BB0_44:
	ret;
}


`
)
